
html, body {
  height: 100%; /* Ensure the body and html take up the full viewport height */
  margin: 0; /* Remove default margins */
  overflow: hidden; /* Prevent scrolling */
}

.content {
  margin-left: 80px; /* Adjust margin to account for left sidebar width */
  margin-right: 80px; /* Adjust margin to account for right sidebar width */
  width: calc(100% - 160px); /* Adjust width to account for both sidebars */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

/* Window cards row specific styles */
.window-row {
  display: flex;
  justify-content: center;
  margin-bottom: 150px;
  width: 100%;
}

.app-container {
  display: flex;
  flex-direction: column;
  justify-content: space-between; /* Ensure footer stays at the bottom */
  min-height: 100vh; /* Full viewport height */
}


/* Carousel specific styles */
.carousel {
  display: flex;
  justify-content: center;
  max-width: 1000px; 
  height: 350px;
  position: relative; /* Needed for absolute positioning of arrows */
}

.carousel-content {
  display: flex;
  transition: transform 0.5s ease-in-out;
  transform: translateX(calc(-100% * var(--current-index, 0)));
}

.carousel-slide {
  min-width: 100%; /* Adjust slide width to match the carousel width */
  height: 100%; /* Adjust slide height to match the carousel height */
  display: none;
}

.carousel-slide.active {
  display: block;
}

.carousel-button {
  position: absolute;
  top: 60%;
  transform: translateY(-50%);
  background: rgba(0, 0, 0, 0.5);
  border: none;
  color: white;
  padding: 1rem;
  cursor: pointer;
  z-index: 10; /* Ensure buttons are on top */
}

.carousel-button.prev {
  left: -30px; /* Adjust to position it at the left edge of the carousel */
}

.carousel-button.next {
  right: -30px; /* Adjust to position it at the right edge of the carousel */
}

.window-card {
  width: 100%; /* Ensure the window card fits within the content area */
  max-width: 900px; 
  height: 350px; /* Set height to match the carousel */
  background-color: transparent;
}

.window-card iframe {
  width: 100%; /* Ensure iframes fill the window card */
  height: 100%; /* Ensure iframes fill the window card */
}

/* Additional CSS as needed for other elements */
:root {
  --backdrop: hsl(0 0% 60% / 0.12);
  --radius: 15;
  --border: 5;
  --backup-border: var(--backdrop);
  --size: 200;
}

.window-card {
  --radius: 15;
  --border: 10;
  --size: 100;
  border-radius: calc(var(--radius) * 1px);
  border: var(--border-size) solid var(--backup-border);
  background-color: transparent;
  height: 100%;
  width: 100%; /* Add a max-width to prevent the card from becoming too wide */
  border-color: #6600CC; /* Always highlighted in pink */
}

.cards-row {
  display: flex;
  gap: 10px;
  flex-wrap: nowrap;
  align-items: center;
  justify-content: center;
  width: 920px;
  height:50px;
  margin-top: -2px; 
  margin-bottom: 6px;
}

.article-card {
  --radius: 15;
  --border: 5;
  --size: 100;
  border-radius: calc(var(--radius) * 1px);
  border: var(--border-size) solid var(--backup-border);
  background-color: #111827;
  height: 100px; /* Increase height */
  max-width: 200px;
  width: 200px; /* Ensure the card width is consistent */
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 1px; /* Add margin to space out the cards */
  padding: 10px;
  margin-top: -30px;
  margin-bottom: 255px;
}

.article-card:hover {
  border-color: #6600CC;
  background-color: hsl(0 0% 20%);
}

.article-card .article-image {
  width: 120%; /* Adjust width */
  height: 125%; /* Adjust height */
  object-fit: cover; /* Ensure the image covers the area */
  border-radius: calc(var(--radius) * 1px);
}



/* Glow specific styles */
[data-glow] {
  --border-size: calc(var(--border, 2) * 1px);
  --hue: calc(var(--base) + (var(--xp, 0) * var(--spread, 0)));
  background-image: radial-gradient(
    var(--spotlight-size) var(--spotlight-size) at
    calc(var(--x, 0) * 1px)
    calc(var(--y, 0) * 1px),
    hsl(var(--hue, 210) calc(var(--saturation, 100) * 1%) calc(var(--lightness, 70) * 1%) / var(--bg-spot-opacity, 0.1)), transparent
  );
  background-color: var(--backdrop, transparent);
  background-size: calc(100% + (2 * var(--border-size))) calc(100% + (2 * var(--border-size)));
  background-position: 50% 50%;
  background-attachment: fixed;
  background-color: #111827;
  border: var(--border-size) solid var(--backup-border);
  position: relative;
  touch-action: none;
}

/* Remove the ::before pseudo-element styles */
[data-glow]::after {
  pointer-events: none;
  content: "";
  position: absolute;
  inset: calc(var(--border-size) * -1);
  border: var(--border-size) solid transparent;
  border-radius: calc(var(--radius) * 1px);
  background-attachment: fixed;
  background-size: calc(100% + (2 * var(--border-size))) calc(100% + (2 * var(--border-size)));
  background-repeat: no-repeat;
  background-position: 50% 50%;
  mask:
    linear-gradient(transparent, transparent),
    linear-gradient(white, white);
  mask-clip: padding-box, border-box;
  mask-composite: intersect;
}

/* This is the spotlight */
[data-glow]::after {
  background-image: radial-gradient(
    calc(var(--spotlight-size) * 0.5) calc(var(--spotlight-size) * 0.5) at
    calc(var(--x, 0) * 1px)
    calc(var(--y, 0) * 1px),
    hsl(0 100% 100% / var(--border-light-opacity, 1)), transparent 100%
  );
}

[data-glow] > [data-glow]:not(:is(a, button)) {
  position: absolute;
  inset: 0;
  will-change: filter;
  opacity: var(--outer, 1);
}

[data-glow] > [data-glow]:not(:is(a, button)) {
  border-radius: calc(var(--radius) * 1px);
  border-width: calc(var(--border-size) * 20);
  filter: blur(calc(var(--border-size) * 10));
  background: none;
  pointer-events: none;
}

[data-glow] > [data-glow]:not(:is(a, button))::before {
  inset: -10px;
  border-width: 10px;
}

[data-glow] > [data-glow] {
  border: none;
}

[data-glow] :is(a, button) {
  border-radius: calc(var(--radius) * 1px);
  border: var(--border-size) solid transparent;
}

[data-glow] :is(a, button) [data-glow] {
  background: none;
}

[data-glow] :is(a, button) [data-glow]::before {
  inset: calc(var(--border-size) * -1);
  border-width: calc(var(--border-size) * 1);
}

.wrapper {
  position: relative;
}

main {
  display: flex;
  flex-direction: column;
  justify-content: space-between; /* Adjust layout to fit content properly */
  align-items: center;
  height: 100vh; /* Force it to take up the full viewport height */
  width: 100vw; /* Ensure it spans the full width */
  overflow: hidden; /* Prevent scrolling inside main */
  position: relative; /* Ensure child elements position relative to this container */
}


.window-card {
  width: 880px; /* Ensure the window card fits within the content area */
  height: 340px; /* Set height to match the carousel */
  margin-top: -2;
  background-color: transparent;
  border-color: #6600CC; /* Always highlighted in pink */
}

/* Additional hover effects for cards */
.article-card:hover {
  border-color: #6600CC;
  background-color: hsl(0 0% 20%);
}
